

$homepage-hero-sizes: (xs: 400px, md: 768px);
$subpage-hero-sizes: (xs: 400px, lg: 600px);


// Hero Images


.hero {

  position: relative;
  overflow: hidden;
  width: 100%;
  font-size: 1rem; // Set font size for child em units
  color: $white;

  img {
    // Note: The transform property is set in-line
    position: absolute;
    z-index: $zindex-hero-image;

    @include media-breakpoint-up($bp-subpage-hero) {
      width: 100%;
      height: auto;
      min-height: map-get($subpage-hero-sizes, lg);
    }

    width: auto;
    min-width: 100%;
    height: 100%;
    min-height: map-get($subpage-hero-sizes, xs) * 1.25;
    top: 50%;
    left: 50%;
    transform: translateX(-50%);
  }

  &__overlay {
    position: absolute;
    z-index: $zindex-hero-overlay;
    height: 100%;
    width: 100%;
    left: 0;
    top: 0;
    background-color: black;
    opacity: 0.4;
  }

  &__title {
    @include align-vertically();

    position: absolute;
    z-index: $zindex-hero-title;
    width: 100%;
    font-family: $hero-title-font-family;
    font-weight: $hero-title-font-weight;
    letter-spacing: $hero-title-letter-spacing;
    text-align: center;
    text-transform: uppercase;
    color: white;

    @include fluid-type($fluid-min-x, $fluid-max-x, 1.5em, 2.75em, $units: vmin);
  }

  &--home {
    @include media-breakpoint-up($bp-homepage-hero) {
      @include focus-background-y(50, 1900, 768);

      height: map-get($homepage-hero-sizes, md);
    }

    height: map-get($homepage-hero-sizes, xs);
    background: url("../images/heros/home.jpg") no-repeat;
    background-size: cover;

    @include focus-background-x(59, 1900, $device-widths);
    @include focus-background-y(60, 911, 400);

    img {
      transform: translateY(-60%);
    }
  }

  &--subpage {
    @include media-breakpoint-up($bp-subpage-hero) {
      height: map-get($subpage-hero-sizes, lg);
    }

    height: map-get($subpage-hero-sizes, xs);
  }

  &--top {
    img {
      top: 0;
      bottom: auto;
      transform: translateX(-50%);
    }
  }

  &--bottom {
    img {
      top: auto;
      bottom: 0;
      transform: translateX(-50%);
    }
  }
}


// Headers


.header {

  $root: &;

  font-size: 1rem; // Set font size for child em units

  &__container {
    @include media-breakpoint-up($bp-content-width) {
      padding: spacing-y($section-py-lg, $ratio: 2) $section-px-lg;
    }

    padding: spacing-y($section-py-sm) $section-px-sm;
  }

  &__body {
    @include media-breakpoint-up($bp-hires) {
      width: $content-width;
      max-width: $content-max-width;
      text-align: left;
    }

    margin: auto;
    text-align: center;
  }

  &__title {

    h1, h2, h3, h4, h5, h6 {
      @include title-type();
      @include fluid-type($fluid-min-x, $fluid-max-x, 1.25em, 3em);

      background-color: $color-hl-3;
      color: white;
    }

    &--wide {
      @include media-breakpoint-up($bp-hires) {
        display: block;
      }

      display: none;
    }

    &--narrow {
      @include media-breakpoint-up($bp-hires) {
        display: none;
      }

      display: block;
    }
  }

  &__subtitle {

    span {
      @include title-type();
      @include fluid-type($fluid-min-x, $fluid-max-x, 1em, 2.5em);

      background-color: $color-bg-3;
      color: white;
    }
  }

  &__intro {
    font-family: $intro-font-family;
    font-size: $intro-font-size;
    font-weight: $intro-font-weight;
    line-height: $intro-line-height;
    letter-spacing: $intro-letter-spacing;
    color: $intro-color;

    p {
      margin-bottom: 0;
    }
  }


  // Home Header


  &--home {

    #{$root}__body {
      @include media-breakpoint-up($bp-content-width) {
        // Allow for scaling the home header body independently the page's content width
        width: $title-width;
        max-width: $title-max-width;
      }
    }

    #{$root}__intro {
      padding-top: 3rem;
    }
  }
}
